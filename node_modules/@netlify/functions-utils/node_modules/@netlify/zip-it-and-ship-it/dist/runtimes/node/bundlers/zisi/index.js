"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const base_path_1 = require("../../utils/base_path");
const src_files_1 = require("./src_files");
const bundle = ({ basePath, config, extension, featureFlags, filename, mainFile, name, pluginsModulesPath, runtime, srcDir, srcPath, stat, }) => __awaiter(void 0, void 0, void 0, function* () {
    const srcFiles = yield (0, src_files_1.getSrcFiles)({
        basePath,
        config: Object.assign(Object.assign({}, config), { includedFilesBasePath: config.includedFilesBasePath || basePath }),
        extension,
        featureFlags,
        filename,
        mainFile,
        name,
        pluginsModulesPath,
        runtime,
        srcDir,
        srcPath,
        stat,
    });
    const dirnames = srcFiles.map((filePath) => (0, path_1.normalize)((0, path_1.dirname)(filePath)));
    return {
        basePath: (0, base_path_1.getBasePath)(dirnames),
        inputs: srcFiles,
        mainFile,
        srcFiles,
    };
});
const bundler = { bundle, getSrcFiles: src_files_1.getSrcFiles };
exports.default = bundler;
//# sourceMappingURL=index.js.map