"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addArchiveSize = void 0;
const path_1 = require("path");
const fs_1 = require("./fs");
// Returns the input object with an additional `size` property containing the
// size of the file at `path` when it is a ZIP archive.
const addArchiveSize = (result) => __awaiter(void 0, void 0, void 0, function* () {
    const { path } = result;
    if ((0, path_1.extname)(path) !== '.zip') {
        return result;
    }
    const { size } = yield (0, fs_1.stat)(path);
    return Object.assign(Object.assign({}, result), { size });
});
exports.addArchiveSize = addArchiveSize;
//# sourceMappingURL=archive_size.js.map